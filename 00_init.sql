-- test data generated by claude sonnet 3.5 via zed
CREATE TABLE "user" (
    "id" SERIAL PRIMARY KEY,
    "email" VARCHAR(255),
    "nicknames" TEXT[],
    "age" SMALLINT,
    "height" REAL,
    "is_active" BOOLEAN,
    "last_login" TIMESTAMP WITH TIME ZONE,
    "_created" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE "robot" (
    "id" SERIAL PRIMARY KEY,
    "name" VARCHAR(100),
    "manufacture_date" DATE,
    "specifications" JSONB,
    "serial_number" UUID,
    "_created" TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    "owner_id" INTEGER REFERENCES "user"(id) ON DELETE SET NULL
);

CREATE TABLE "part" (
    "id" SERIAL PRIMARY KEY,
    "name" VARCHAR(100),
    "cost" NUMERIC(10,2),
    "weight" DOUBLE PRECISION,
    "dimensions" POINT,
    "previous_prices" NUMERIC(10,2)[],
    "description" TEXT
);

CREATE TABLE "robot_parts" (
    "id" SERIAL PRIMARY KEY,
    "robot_id" INTEGER REFERENCES "robot"(id) ON DELETE SET NULL,
    "part_id" INTEGER REFERENCES "part"(id) ON DELETE SET NULL,
    "part_quantity" INTEGER,
    "installation_date" DATE
);

-- New table to demonstrate more types
CREATE TABLE "sensor_data" (
    "id" SERIAL PRIMARY KEY,
    "robot_id" INTEGER REFERENCES "robot"(id),
    "temperature" REAL,
    "humidity" REAL,
    "pressure" REAL,
    "coordinates" POINT,
    "measurement_time" TIME,
    "data_blob" BYTEA,
    "status" VARCHAR(20),
    "readings" INTEGER[]
);

-- Populate tables with test data

INSERT INTO "user" (email, nicknames, age, height, is_active, last_login) VALUES
('paul@dune.com', ARRAY['Muad''Dib', 'Usul'], 22, 180.5, true, '2023-03-15 10:30:00+00'),
('leto@atreides.com', ARRAY['Duke', 'Leto the Just'], 45, 185.0, false, '2023-02-28 15:45:00+00'),
('baron@harkonnen.com', ARRAY['The Baron', 'Vladimir'], 65, 170.2, true, '2023-03-10 08:15:00+00');

INSERT INTO "robot" (name, manufacture_date, specifications, serial_number) VALUES
('Hunter-Seeker', '2023-01-15', '{"speed": 50, "accuracy": 0.95, "range": 1000}', gen_random_uuid()),
('Harvester', '2023-02-20', '{"capacity": 5000, "efficiency": 0.85, "fuel_type": "spice"}', gen_random_uuid()),
('Ornithopter', '2023-03-01', '{"max_altitude": 10000, "passenger_capacity": 6, "stealth_mode": true}', gen_random_uuid());

INSERT INTO "part" (name, cost, weight, dimensions, previous_prices, description) VALUES
('Suspensor', 1000.00, 5.75, '(10,20)', ARRAY[950.00, 975.00, 990.00], 'Anti-gravity device'),
('Holtzman Shield', 5000.00, 2.30, '(5,5)', ARRAY[4800.00, 4900.00], 'Personal defense shield'),
('Spice Sensor', 2500.00, 1.20, '(3,4)', ARRAY[2400.00, 2450.00], 'Detects trace amounts of spice');

INSERT INTO "robot_parts" (robot_id, part_id, part_quantity, installation_date) VALUES
(1, 1, 2, '2023-01-20'),
(1, 2, 1, '2023-01-21'),
(2, 1, 4, '2023-02-25'),
(2, 3, 2, '2023-02-26'),
(3, 1, 6, '2023-03-05'),
(3, 2, 1, '2023-03-06'),
(3, 3, 1, '2023-03-07');

INSERT INTO "sensor_data" (robot_id, temperature, humidity, pressure, coordinates, measurement_time, data_blob, status, readings) VALUES
(1, 32.5, 0.15, 1013.25, '(45.6, -122.7)', '14:30:00', E'\\xDEADBEEF', 'NORMAL', ARRAY[1024, 2048, 4096]),
(2, 45.2, 0.08, 1015.10, '(40.7, -74.0)', '09:15:00', E'\\xCAFEBABE', 'WARNING', ARRAY[512, 1024, 2048]),
(3, 28.7, 0.22, 1010.50, '(51.5, -0.1)', '18:45:00', E'\\xFACEFEED', 'CRITICAL', ARRAY[2048, 4096, 8192]);

-- additional schema for testing
CREATE SCHEMA "etl";

CREATE TABLE "etl"."notion" (
	"id" INTEGER NOT NULL UNIQUE,
	"data" VARCHAR,
	"_created" TIMESTAMPTZ,
	PRIMARY KEY("id")
);

CREATE TABLE "etl"."airtable" (
	"id" INTEGER NOT NULL UNIQUE,
	"data" VARCHAR,
	"_created" TIMESTAMPTZ,
	PRIMARY KEY("id")
);


CREATE TABLE "etl"."slack" (
	"id" INTEGER NOT NULL UNIQUE,
	"data" VARCHAR,
	"_created" TIMESTAMPTZ,
	PRIMARY KEY("id")
);

CREATE TABLE "etl"."linear" (
	"id" INTEGER NOT NULL UNIQUE,
	"data" VARCHAR,
	"_created" TIMESTAMPTZ,
	PRIMARY KEY("id")
);

CREATE TABLE "etl"."salesforce" (
	"id" INTEGER NOT NULL UNIQUE,
	"data" VARCHAR,
	"_created" TIMESTAMPTZ,
	PRIMARY KEY("id")
);

CREATE TABLE "etl"."hubspot" (
	"id" INTEGER NOT NULL UNIQUE,
	"data" VARCHAR,
	"_created" TIMESTAMPTZ,
	PRIMARY KEY("id")
);

CREATE TABLE "etl"."trello" (
	"id" INTEGER NOT NULL UNIQUE,
	"data" VARCHAR,
	"_created" TIMESTAMPTZ,
	PRIMARY KEY("id")
);

CREATE TABLE "etl"."asana" (
	"id" INTEGER NOT NULL UNIQUE,
	"data" VARCHAR,
	"_created" TIMESTAMPTZ,
	PRIMARY KEY("id")
);

CREATE TABLE "etl"."jira" (
	"id" INTEGER NOT NULL UNIQUE,
	"data" VARCHAR,
	"_created" TIMESTAMPTZ,
	PRIMARY KEY("id")
);

CREATE TABLE "etl"."teams" (
	"id" INTEGER NOT NULL UNIQUE,
	"data" VARCHAR,
	"_created" TIMESTAMPTZ,
	PRIMARY KEY("id")
);

CREATE TABLE "etl"."gdrive" (
	"id" INTEGER NOT NULL UNIQUE,
	"data" VARCHAR,
	"_created" TIMESTAMPTZ,
	PRIMARY KEY("id")
);

CREATE TABLE "etl"."outlook" (
	"id" INTEGER NOT NULL UNIQUE,
	"data" VARCHAR,
	"_created" TIMESTAMPTZ,
	PRIMARY KEY("id")
);

CREATE TABLE "etl"."redis" (
	"id" INTEGER NOT NULL UNIQUE,
	"data" VARCHAR,
	"_created" TIMESTAMPTZ,
	PRIMARY KEY("id")
);

CREATE TABLE "etl"."github" (
	"id" INTEGER NOT NULL UNIQUE,
	"data" VARCHAR,
	"_created" TIMESTAMPTZ,
	PRIMARY KEY("id")
);

CREATE TABLE "etl"."calendar" (
	"id" INTEGER NOT NULL UNIQUE,
	"data" VARCHAR,
	"_created" TIMESTAMPTZ,
	PRIMARY KEY("id")
);
